<?php
/**
 * Created by PhpStorm.
 * User: jonaskortum
 * Date: 09.12.16
 * Time: 09:56
 */

function reflection_menu()
{
    $items['persoenliche_reflexion'] = array(
        'title' => 'Persönliche Reflexion',
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('reflection_get_user_reflection_form'),
    );

    $items['gruppenreflexion'] = array(
        'title' => 'Gruppenreflexion',
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('reflection_get_group_reflection_form'),
        'file' => 'group_reflection.inc',
    );

    return $items;
}

/*
 * Diese Funktion erstellt ein Formular, in das der Nutzer seine persönliche Reflexion eintragen kann. Dieses
 * Formular enthält eine Textarea und einen Submit-Button
 */
function reflection_get_user_reflection_form($form, &$form_submit)
{

    //Sollte es bereits eine gespeicherte Reflexion des Benutzers geben, wird diese im Vorfeld geladen und in die
    //Textarea eingefügt
    $reflection = reflection_get_saved_user_reflection();

    $form['personal_reflection'] = array(
        '#title' => "persönliche Reflexion",
        '#type' => 'fieldset',
        '#description' => "Am Ende der Projektphase soll jedes Gruppenmitglied ein persönliches Fazit ziehen.
            Dort können sowohl positive als auch negative Aspekte der Projektphase genannt werden."
    );
    $form['personal_reflection']['reflection'] = array(
        '#title' => t('reflection'),
        '#resizable' => FALSE,
        "#default_value" => $reflection->reflection,
        '#type' => 'textarea',
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Fazit speichern',
        '#submit' => array('reflection_save_user_reflection')

    );

    return $form;
}

/*
 * Diese Funktion liest alle nötigen Felder des Formulares aus und speichert die Reflexion in der Datenbank ab
 */
function reflection_save_user_reflection($form, &$form_state)
{

    //der aktuell angemeldete User wird ermittelt
    global $user;

    //Die eingebene Reflexion wird ausgelesen
    $task = $form_state['values']['reflection'];

    //Falls schon eine gespeicherte Reflexion in der Datenbank vorliegt, wird diese aktualsiert. Falls nicht, wird ein
    //neuer Eintrag erstellt
    if (reflection_check_if_there_is_already_a_reflection()) {
        $sql = "UPDATE {user_reflection} SET reflection = '$task' WHERE uid = " . $user->uid;
    } else {
        $sql = "INSERT INTO {user_reflection} (uid,reflection) VALUES(" . $user->uid . ",'" . $task . "');";
    }

    db_query($sql);
    drupal_set_message("Reflexion wurde erfolgreich gespeichert!");
    drupal_goto("");
}

/*
 * Diese Funktion überprüft, ob bereits eine gespeicherte Reflexion der Nutzers in der Datenbank vorhanden ist
 */
function reflection_check_if_there_is_already_a_reflection()
{

    global $user;
    $found_a_reflection = false;
    $sql = "SELECT * FROM {user_reflection} WHERE uid = " . $user->uid;
    $result = db_query($sql);
    foreach ($result as $r) {
        $found_a_reflection = true;
    }

    return $found_a_reflection;

}

/*
 * Diese Funktion lädt die gespeicherte persönliche Reflexion des Nutzers aus der Datenbank. Sollte noch keine
 * vorhanden sein, wird ein leerer String zurückgegeben
 */
function reflection_get_saved_user_reflection()
{
    global $user;
    $reflection = "";
    $sql = "SELECT * FROM {user_reflection} WHERE uid = " . $user->uid;
    $reflection_result = db_query($sql);
    foreach ($reflection_result as $ref) {
        $reflection = $ref;
    }

    return $reflection;
}